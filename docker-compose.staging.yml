version: "3.8"

services:
  dj_web:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    expose:
      - 8000
    env_file:
      - ./docker/backend/.env.staging
    depends_on:
      - pg_db
  pg_db:
    container_name: postgres_container
    image: postgres:12.0-alpine
    ports:
      - 5432:5432
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./docker/backend/.env.staging.db
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: django_pass
    ports:
      - "5050:80"
    expose:
      - "5050"
  nginx-proxy:
    container_name: nginx-proxy
    build: docker/nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - dj_web
  acme-companion:
    image: nginxproxy/acme-companion
    env_file:
      - docker/backend/.env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
